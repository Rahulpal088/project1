{"version":3,"sources":["Component/Header.js","Component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","document","title","logoText","className","mode","href","type","id","onClick","toggleMode","htmlFor","Form","useState","text","setText","heading","rows","placeholder","value","onChange","event","target","textUpCase","toUpperCase","textlwrCase","toLowerCase","textSentenceCase","slice","textCapitalCase","split","map","word","index","join","length","App","setMode","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMA2BeA,MAxBf,SAAgBC,GAEZ,OADAC,SAASC,MAAQF,EAAMG,SAEnB,qBAAKC,UAAS,yCAAoCJ,EAAMK,KAA1C,eAAqDL,EAAMK,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCN,EAAMG,WAC5C,wBAAQC,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACA,sBAAMH,UAAU,0BAEhB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACA,qBAAIJ,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SAAyB,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBACzB,oBAAIF,UAAU,WAAd,SAAyB,mBAAGA,UAAU,WAAWE,KAAK,IAA7B,wBAE7B,sBAAKF,UAAS,sCAA8C,UAAbJ,EAAMK,KAAe,OAAO,SAA3E,UACI,uBAAOD,UAAU,mBAAmBG,KAAK,WAAWE,QAAST,EAAMU,WAAYF,GAAG,2BAClF,uBAAOJ,UAAU,mBAAmBO,QAAQ,yBAA5C,mCCjBD,SAASC,EAAKZ,GAC3B,MAAwBa,mBAAS,oBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,OACE,mCACE,sBAAKX,UAAS,8BAAwC,UAAfJ,EAAMK,KAAiB,OAAO,SAArE,UACE,sBAAKD,UAAU,OAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAMgB,UAC5B,0BACEZ,UAAU,eACVI,GAAG,8BACHS,KAAK,IACLC,YAAY,eACZC,MAAOL,EACPM,SAdW,SAACC,GACpBN,EAAQM,EAAMC,OAAOH,aAgBjB,wBAAQf,UAAS,kBAA0B,SAAbJ,EAAMK,KAAc,QAAQ,YAAzC,SAA6DI,QAvCnE,WACf,IAAMc,EAAaT,EAAKU,cACxBT,EAAQQ,IAqCJ,kCAGA,wBAAQnB,UAAS,kBAA0B,SAAbJ,EAAMK,KAAc,QAAQ,YAAzC,SAA6DI,QAtClE,WAChB,IAAMgB,EAAcX,EAAKY,cACzBX,EAAQU,IAoCJ,kCAGA,wBAAQrB,UAAS,kBAA0B,SAAbJ,EAAMK,KAAc,QAAQ,YAAzC,SAA6DI,QArC7D,WACrB,IAAMkB,EACJb,EAAK,GAAGU,cAAgBV,EAAKc,MAAM,GAAGF,cACxCX,EAAQY,IAkCJ,sCAGA,wBAAQvB,UAAS,kBAA0B,SAAbJ,EAAMK,KAAc,QAAQ,YAAzC,SAA6DI,QAnC9D,WACpB,IAAIoB,EAAkBf,EACnBgB,MAAM,KACNC,KAAI,SAAUC,EAAMC,GACnB,OAAOD,EAAK,GAAGR,cAAgBQ,EAAKJ,MAAM,GAAGF,iBAE9CQ,KAAK,KACRnB,EAAQc,IA4BJ,mCAGA,sBAAKzB,UAAU,OAAf,UACE,mDACA,4CACcU,EAAKgB,MAAM,KAAKK,OAD9B,mBACsDrB,EAAKqB,UAE3D,yCACA,4BAAIrB,YC1BCsB,MA7Bf,WACE,MAAwBvB,mBAAS,SAAjC,mBAAOR,EAAP,KAAagC,EAAb,KAWA,OACE,qCAEI,cAAC,EAAD,CAAQlC,SAAS,eAAeE,KAAMA,EAAMK,WAb/B,WACJ,UAATL,GACFgC,EAAQ,QACRpC,SAASqC,KAAKC,MAAMC,gBAAkB,YAEtCH,EAAQ,SACRpC,SAASqC,KAAKC,MAAMC,gBAAkB,WAahC,cAAC5B,EAAD,CAAMI,QAAQ,gBAAgBX,KAAMA,QChBjCoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BZ,K","file":"static/js/main.78b450b5.chunk.js","sourcesContent":["import React from 'react';\r\n// import { a } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    document.title = props.logoText;\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.logoText}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\"><a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a></li>\r\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"#\">About</a></li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n  const [text, setText] = useState(\"this is the word\");\r\n\r\n  const toUpCase = () => {\r\n    const textUpCase = text.toUpperCase();\r\n    setText(textUpCase);\r\n  };\r\n  const tolwrCase = () => {\r\n    const textlwrCase = text.toLowerCase();\r\n    setText(textlwrCase);\r\n  };\r\n  const toSentenceCase = () => {\r\n    const textSentenceCase =\r\n      text[0].toUpperCase() + text.slice(1).toLowerCase();\r\n    setText(textSentenceCase);\r\n  };\r\n  const toCapitalCase = () => {\r\n    let textCapitalCase = text\r\n      .split(\" \")\r\n      .map(function (word, index) {\r\n        return word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n      })\r\n      .join(\" \");\r\n    setText(textCapitalCase);\r\n  };\r\n  const changeHolder = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`container my-3 text-${props.mode === 'light'?'dark':'light'}`}>\r\n        <div className=\"my-3\">\r\n          <h2 className=\"pb-1\">{props.heading}</h2>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"5\"\r\n            placeholder=\"Type here...\"\r\n            value={text}\r\n            onChange={changeHolder}\r\n          ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'secondary'} mx-1`} onClick={toUpCase}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'secondary'} mx-1`} onClick={tolwrCase}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'secondary'} mx-1`} onClick={toSentenceCase}>\r\n          Convert to sentence case\r\n        </button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'secondary'} mx-1`} onClick={toCapitalCase}>\r\n          Convert to capitalize\r\n        </button>\r\n        <div className=\"my-3\">\r\n          <h3>Your Text Summary</h3>\r\n          <p>\r\n            Your words {text.split(\" \").length} and characters {text.length}\r\n          </p>\r\n          <h3>Preview</h3>\r\n          <p>{text}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Header from \"./Component/Header\";\nimport Form from \"./Component/Form\";\n// import About from \"./Component/About\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#12171d\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#FFF\";\n    }\n  };\n  \n  return (\n    <>\n      {/* <Router> */}\n        <Header logoText=\"Convert Text\" mode={mode} toggleMode={toggleMode} />\n        {/* <Switch>\n          <Route path=\"/about\">\n            <About title=\"About\" mode={mode} />\n          </Route>\n          <Route path=\"/\"> */}\n            <Form heading=\"Convert Text!\" mode={mode} />\n          {/* </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}